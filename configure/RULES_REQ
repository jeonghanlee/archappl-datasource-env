

gf_RULES_NAMES:=gfdeb gfrpm
install_gf_RULES:=$(addprefix install., $(gf_RULES_NAMES))
setup_gf_RULES:=$(addprefix setup., $(gf_RULES_NAMES))
remove_gf_RULES:=$(addprefix remove., $(gf_RULES_NAMES))

.PHONY: clean.conf.gf conf.gf start.gf status.gf restart.gf stop.gf disable.gf conf.gf.show enable.gf

# Debian 11
setup.gfdeb: install.gfdeb enable.gf

setup.gfrpm: install.gfrpm enable.gf



conf.gf:
#	$(QUIET)$(SUDO) $(INSTALL) -p -m 660 $(CF_SITE_TEMPLATE_PATH)/$(ES_JAVA_OPTS_FILE) $(CF_ES_CONF_PATH)/jvm.options.d/
#	$(QUIET)$(SUDO) $(INSTALL) -p -m 660 $(CF_SITE_TEMPLATE_PATH)/$(CF_ES_CONF_NAME) $(CF_ES_CONF_PATH)/


#conf.esyml: $(CF_ES_CONF_NAME).in
#	$(QUIET)echo ">>> Generate $(basename $<) from $<"
#	$(QUIET)sed -e "s|@CF_ES_NETWORK_HOST@|$(CF_ES_NETWORK_HOST)|g" \
#		        -e "s|@CF_ES_HTTP_HOST@|$(CF_ES_HTTP_HOST)|g" \
#		        -e "s|@CF_ES_CLUSTER_NAME@|$(CF_ES_CLUSTER_NAME)|g" \
#		        -e "s|@CF_ES_NODE_NAME@|$(CF_ES_NODE_NAME)|g" \
#		        -e "s|@CF_ES_DATA_PATH@|$(CF_ES_DATA_PATH)|g" \
#		        -e "s|@CF_ES_LOGS_PATH@|$(CF_ES_LOGS_PATH)|g" \
#		        -e "s|@CF_ES_DISCOVERY_TYPE@|$(CF_ES_DISCOVERY_TYPE)|g" \
#		        -e "s|@CF_ES_XPACK_SECURITY_ENABLED@|$(CF_ES_XPACK_SECURITY_ENABLED)|g" \
#		        -e "s|@CF_ES_XPACK_SECURITY_ENROLL_ENABLED@|$(CF_ES_XPACK_SECURITY_ENROLL_ENABLED)|g" \
#		        -e "s|@CF_ES_XPACK_SECURITY_HTTP_SSL@|$(CF_ES_XPACK_SECURITY_HTTP_SSL)|g" \
#		        -e "s|@CF_ES_XPACK_SECURITY_HTTP_SSL_KEYSTORE_PATH@|$(CF_ES_XPACK_SECURITY_HTTP_SSL_KEYSTORE_PATH)|g" \
#		        -e "s|@CF_ES_XPACK_SECURITY_TRANSPORT_SSL@|$(CF_ES_XPACK_SECURITY_TRANSPORT_SSL)|g" \
#		        -e "s|@CF_ES_XPACK_SECURITY_TRANSPORT_SSL_VERIFICATION@|$(CF_ES_XPACK_SECURITY_TRANSPORT_SSL_VERIFICATION)|g" \
#		        -e "s|@CF_ES_XPACK_SECURITY_TRANSPORT_SSL_KEYSTORE_PATH@|$(CF_ES_XPACK_SECURITY_TRANSPORT_SSL_KEYSTORE_PATH)|g" \
#		        -e "s|@CF_ES_XPACK_SECURITY_TRANSPORT_SSL_TRUSTSTORE_PATH@|$(CF_ES_XPACK_SECURITY_TRANSPORT_SSL_TRUSTSTORE_PATH)|g" \
#		        -e "s|@CF_ES_HTTP_HOST@|$(CF_ES_HTTP_HOST)|g" \
#		        < $< > $(basename $<)

#conf.esyml.show: $(CF_ES_CONF_NAME).in
#	$(QUIET)cat -b $(basename $<)

GF_NAME=grafana-enterprise
GF_VER=9.2.1
GF_FILE=$(GF_NAME)_$(GF_VER)
GF_DEB=$(GF_FILE)_amd64.deb
GF_RPM=$(GF_FILE)-1.x86_64.rpm
#
GF_DEB_URL:="https://dl.grafana.com/enterprise/release/$(GF_DEB)"
GF_RPM_URL:="https://dl.grafana.com/enterprise/release/$(GF_RPM)"
#
#
install.gfdeb:
	$(QUIET) wget -c $(GF_DEB_URL)
	$(SUDO) dpkg -i ./$(GF_DEB)

remove.gfdeb:
	$(QUIET)$(SUDO) apt purge -y $(GF_NAME)

# Rocky 8
install.gfrpm:
	$(QUIET) wget -c $(GF_RPM_URL)
	$(SUDO) dnf localinstall -y $(GF_RPM)

remove.gfrpm:
	$(QUIET)$(SUDO) dnf remove $(GF_NAME)

# Centos 7
install.gfrpm-yum:
	$(QUIET) wget -c $(GF_RPM_URL)
	$(SUDO) yum localinstall -y $(GF_RPM)

remove.gfrpm-yum:
	$(QUIET)$(SUDO) yum remove $(GF_NAME)


ifeq ($(UNAME_S),Linux)
status.gf:
	$(QUIET) systemctl status -l $(SYSTEMD_FILENAME) | cat -b

#
start.gf:
	$(QUIET)sudo systemctl start $(SYSTEMD_FILENAME)
#
# We ignore its error
stop.gf:
	-$(QUIET)sudo systemctl stop $(SYSTEMD_FILENAME)
#
#
restart.gf:
	$(QUIET)sudo systemctl restart $(SYSTEMD_FILENAME)
#
# We ignore its error
clean.gf:
	$(if $(wildcard $(SYSTEMD_PATH)/$(SYSTEMD_FILENAME)), $(QUIET)sudo rm -f $(SYSTEMD_PATH)/$(SYSTEMD_FILENAME))
#
#
enable.gf:
	$(if $(wildcard $(SYSTEMD_PATH)/$(SYSTEMD_FILENAME)), sudo systemctl enable $(SYSTEMD_FILENAME))
#
#
disable.gf:
	$(if $(wildcard $(SYSTEMD_PATH)/$(SYSTEMD_FILENAME)), sudo systemctl disable $(SYSTEMD_FILENAME))
#
endif

